[{"/home/ostap/projects/pecode_software-test/src/index.js":"1","/home/ostap/projects/pecode_software-test/src/App.js":"2","/home/ostap/projects/pecode_software-test/src/reportWebVitals.js":"3","/home/ostap/projects/pecode_software-test/src/context/DataContext.js":"4","/home/ostap/projects/pecode_software-test/src/components/pages/Characters.js":"5","/home/ostap/projects/pecode_software-test/src/components/pages/Episodes.js":"6","/home/ostap/projects/pecode_software-test/src/components/pages/Locations.js":"7","/home/ostap/projects/pecode_software-test/src/components/pages/MyWatchList.js":"8","/home/ostap/projects/pecode_software-test/src/components/ui-layouts/Navbar.js":"9","/home/ostap/projects/pecode_software-test/src/components/ui-layouts/btnstyles.js":"10","/home/ostap/projects/pecode_software-test/src/context/reducer.js":"11","/home/ostap/projects/pecode_software-test/src/components/ui-layouts/Pagination.js":"12","/home/ostap/projects/pecode_software-test/src/components/ui-layouts/Posts.js":"13","/home/ostap/projects/pecode_software-test/src/components/ui-layouts/Item.js":"14","/home/ostap/projects/pecode_software-test/src/context/types.js":"15"},{"size":935,"mtime":1607085791565,"results":"16","hashOfConfig":"17"},{"size":1057,"mtime":1607094561616,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1606985800086,"results":"19","hashOfConfig":"17"},{"size":332,"mtime":1606988910171,"results":"20","hashOfConfig":"17"},{"size":1537,"mtime":1607334019014,"results":"21","hashOfConfig":"17"},{"size":1520,"mtime":1607334023962,"results":"22","hashOfConfig":"17"},{"size":1522,"mtime":1607334030378,"results":"23","hashOfConfig":"17"},{"size":362,"mtime":1607334032590,"results":"24","hashOfConfig":"17"},{"size":5913,"mtime":1607333278090,"results":"25","hashOfConfig":"17"},{"size":830,"mtime":1607333060297,"results":"26","hashOfConfig":"17"},{"size":1382,"mtime":1607332442458,"results":"27","hashOfConfig":"17"},{"size":539,"mtime":1607075289642,"results":"28","hashOfConfig":"17"},{"size":3778,"mtime":1607331357736,"results":"29","hashOfConfig":"17"},{"size":2332,"mtime":1607172072656,"results":"30","hashOfConfig":"17"},{"size":270,"mtime":1607328659716,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"xgld6d",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/ostap/projects/pecode_software-test/src/index.js",[],["72","73"],"/home/ostap/projects/pecode_software-test/src/App.js",["74"],"import './App.css';\nimport { useUserData } from './context/DataContext'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Characters } from './components/pages/Characters'\nimport { Episodes } from './components/pages/Episodes'\nimport { Locations } from './components/pages/Locations'\nimport { MyWatchList } from './components/pages/MyWatchList'\nimport { Navbar } from './components/ui-layouts/Navbar'\nimport { Item } from './components/ui-layouts/Item'\n\n\nexport const App = () => {\n  const [{ view, item }, dispatch] = useUserData()\n  \n  return (\n    <Router>\n      <div className=\"container\">\n        <Navbar />\n          {view && <Item item={item} />}\n          <Switch>\n            <Route exact path=\"/characters\" component={Characters} />\n            <Route exact path=\"/episodes\" component={Episodes} />\n            <Route exact path=\"/locations\" component={Locations} />\n            <Route exact path=\"/mywatchlist\" component={MyWatchList} />\n          </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/ostap/projects/pecode_software-test/src/reportWebVitals.js",[],"/home/ostap/projects/pecode_software-test/src/context/DataContext.js",[],"/home/ostap/projects/pecode_software-test/src/components/pages/Characters.js",["75"],"import React, { useState, useMemo } from 'react'\nimport { useUserData } from './../../context/DataContext'\nimport { Posts } from '../ui-layouts/Posts'\nimport { Pagination } from '../ui-layouts/Pagination'\nimport { SET_ITEMS } from '../../context/types'\n\nexport const Characters = () => {\n\tconst [{items}, dispatch] = useUserData()\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n\tconst [postsPerPage] = useState(10);\n\t\n\tuseMemo(async () => {\n\t\ttry {\n\t\t\tsetLoading(true)\n\t\t\tconst response = await fetch('https://cors-anywhere.herokuapp.com/https://rickandmortyapi.com/api/character/')\n\t\t\tconst data = await response.json()\n\t\t\tawait dispatch({\n\t\t\t\ttype: SET_ITEMS, \n\t\t\t\tpayload: {\n\t\t\t\t\titems: data.results,\n\t\t\t\t\ttype: 'characters'\n\t\t\t\t}})\n\t\t\tawait localStorage.setItem('characters', JSON.stringify(data.results))\n\t\t\tsetLoading(false)\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n  }, []);\n\t\n\t// Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = items.slice(indexOfFirstPost, indexOfLastPost);\n\t\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\t\n\treturn (\n\t\t<>\n\t\t\t<h1 style={{textAlign: \"center\"}}>The Characters Blog</h1>\n\t\t\t\t<Posts posts={currentPosts} loading={loading}/>\n\t\t\t\t\t<div className=\"footer\">\n\t\t\t\t\t\t<Pagination \n\t\t\t\t\t\t\tpostsPerPage={postsPerPage}\n\t\t\t\t\t\t\ttotalPosts={items.length}\n\t\t\t\t\t\t\tpaginate={paginate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t</>\n\t)\n}\n","/home/ostap/projects/pecode_software-test/src/components/pages/Episodes.js",["76"],"import React, { useState, useMemo } from 'react'\nimport { useUserData } from './../../context/DataContext'\nimport { Posts } from '../ui-layouts/Posts'\nimport { Pagination } from '../ui-layouts/Pagination'\nimport { SET_ITEMS } from '../../context/types'\n\nexport const Episodes = () => {\n\tconst [{items}, dispatch] = useUserData()\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n\tconst [postsPerPage] = useState(25);\n\t\n\tuseMemo(async () => {\n\t\ttry {\n\t\t\tsetLoading(true)\n\t\t\tconst response = await fetch('https://cors-anywhere.herokuapp.com/https://rickandmortyapi.com/api/episode/')\n\t\t\tconst data = await response.json()\n\t\t\tawait dispatch({\n\t\t\t\ttype: SET_ITEMS, \n\t\t\t\tpayload: {\n\t\t\t\t\titems: data.results,\n\t\t\t\t\ttype: 'episodes'\n\t\t\t\t}})\n\t\t\tawait localStorage.setItem('episodes', JSON.stringify(data.results))\n\t\t\tsetLoading(false)\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n  }, []);\n\t\n\t// Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = items.slice(indexOfFirstPost, indexOfLastPost);\n\t\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\t\n\treturn (\n\t\t<>\n\t\t\t<h1 style={{textAlign: \"center\"}}>The Episodes Blog</h1>\n\t\t\t\t<Posts posts={currentPosts} loading={loading}/>\n\t\t\t\t<div className=\"footer\">\n\t\t\t\t\t<Pagination \n\t\t\t\t\t\tpostsPerPage={postsPerPage}\n\t\t\t\t\t\ttotalPosts={items.length}\n\t\t\t\t\t\tpaginate={paginate}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t</>\n\t)\n}\n","/home/ostap/projects/pecode_software-test/src/components/pages/Locations.js",["77"],"import React, { useState, useMemo } from 'react'\nimport { useUserData } from './../../context/DataContext'\nimport { Posts } from '../ui-layouts/Posts'\nimport { Pagination } from '../ui-layouts/Pagination'\nimport { SET_ITEMS } from '../../context/types'\n\nexport const Locations = () => {\n\tconst [{items}, dispatch] = useUserData()\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n\tconst [postsPerPage] = useState(25);\n\n\tuseMemo(async () => {\n\t\ttry {\n\t\t\tsetLoading(true)\n\t\t\tconst response = await fetch('https://cors-anywhere.herokuapp.com/https://rickandmortyapi.com/api/location/')\n\t\t\tconst data = await response.json()\n\t\t\tawait dispatch({\n\t\t\t\ttype: SET_ITEMS, \n\t\t\t\tpayload: {\n\t\t\t\t\titems: data.results,\n\t\t\t\t\ttype: 'locations'\n\t\t\t\t}})\n\t\t\tawait localStorage.setItem('locations', JSON.stringify(data.results))\n\t\t\tsetLoading(false)\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t}, []);\n\t\n\t// Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = items.slice(indexOfFirstPost, indexOfLastPost);\n\t\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\t\n\treturn (\n\t\t<>\n\t\t\t<h1 style={{textAlign: \"center\"}}>The Episodes Blog</h1>\n\t\t\t\t<Posts posts={currentPosts} loading={loading}/>\n\t\t\t\t<div className=\"footer\">\n\t\t\t\t\t<Pagination \n\t\t\t\t\t\tpostsPerPage={postsPerPage}\n\t\t\t\t\t\ttotalPosts={items.length}\n\t\t\t\t\t\tpaginate={paginate}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t</>\n\t)\n}\n","/home/ostap/projects/pecode_software-test/src/components/pages/MyWatchList.js",["78"],"import React from 'react'\nimport { useUserData } from '../../context/DataContext'\nimport { Posts } from '../ui-layouts/Posts'\n\nexport const MyWatchList = () => {\n\tconst [{my_list},dispatch] = useUserData()\n\n\treturn (\n\t\t<>\n\t\t\t<h1 style={{textAlign: \"center\"}}>MyWatchList</h1>\n\t\t\t\t{my_list.length > 0 ? <Posts posts={my_list} loading={false}/> : null}\n\t\t</>\n\t)\n}\n","/home/ostap/projects/pecode_software-test/src/components/ui-layouts/Navbar.js",["79"],"import React, { useEffect, useState } from 'react';\nimport { useUserData } from '../../context/DataContext'\nimport { useHistory } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Link } from 'react-router-dom';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { StyledMenuItem, StyledMenu } from './btnstyles'\nimport { SET_FILTER, SET_TYPE } from '../../context/types'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    position: \"relative\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nexport const Navbar = () => {\n  let [{type, items}, dispatch] = useUserData()\n  const history = useHistory()\n  if(type === null){\n    type = history.location.pathname.slice(1)\n  }\n  const storage = JSON.parse(localStorage.getItem(`${type}`))\n  const [data, setData] = useState(items)\n\tconst classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  \n  useEffect(()=>{\n    setData(storage)\n  },[type])\n\n  const handleClick = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const setPage = type => {\n    dispatch({\n      type: SET_TYPE,\n      payload: type\n    })\n  }\n\n  const handleChange = (event, type) => {\n    switch (type) {\n      case 'characters':\n        dispatch({\n          type: SET_FILTER,\n          payload: data.filter(item => item.species.toLowerCase().startsWith(event.target.value) || item.status.toLowerCase().startsWith(event.target.value) || item.gender.toLowerCase().startsWith(event.target.value))\n        })\n        break;\n      case 'episodes':\n        dispatch({\n          type: SET_FILTER,\n          payload: data.filter(item => item.name.toLowerCase().startsWith(event.target.value) || item.air_date.toLowerCase().startsWith(event.target.value))\n        })\n        break;\n      case 'locations':\n        dispatch({\n          type: SET_FILTER,\n          payload: data.filter(item => item.name.toLowerCase().startsWith(event.target.value) || item.type.toLowerCase().startsWith(event.target.value) || item.dimension.toLowerCase().startsWith(event.target.value))\n        })\n        break;\n      case 'mywatchlist':\n        dispatch({\n          type: SET_FILTER,\n          payload: {data: data.filter(item => item.name.toLowerCase().startsWith(event.target.value)), type: 'mywatchlist'}\n        })\n        break;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\tonClick={handleClick}\n          >\n            <MenuIcon />\n          </IconButton>\n\t\t\t\t\t<StyledMenu\n\t\t\t\t\t\tid=\"customized-menu\"\n\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Link to=\"/characters\" onClick={()=>setPage(\"characters\")}>\n\t\t\t\t\t\t\t<StyledMenuItem>\n\t\t\t\t\t\t\t\t<i className=\"fas fa-users fa-2x\"></i>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Characters\" />\n\t\t\t\t\t\t\t</StyledMenuItem>\n  \t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link to=\"/episodes\" onClick={()=>setPage(\"episodes\")}>\n\t\t\t\t\t\t\t<StyledMenuItem>\n\t\t\t\t\t\t\t\t<i className=\"fas fa-film fa-2x\"></i>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Episodes\" />\n\t\t\t\t\t\t\t</StyledMenuItem>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link to=\"/locations\" onClick={()=>setPage(\"locations\")}>\n\t\t\t\t\t\t\t<StyledMenuItem>\n\t\t\t\t\t\t\t\t<i className=\"fas fa-map-marker-alt fa-2x\"></i>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Locations\" />\n\t\t\t\t\t\t\t</StyledMenuItem>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link to=\"/mywatchlist\" onClick={()=>setPage(\"mywatchlist\")}>\n\t\t\t\t\t\t\t<StyledMenuItem>\n\t\t\t\t\t\t\t\t<i className=\"far fa-list-alt fa-2x\"></i>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"MyWatchList\" />\n\t\t\t\t\t\t\t</StyledMenuItem>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</StyledMenu>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Rick and Morty test task\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              onChange={(event) => handleChange(event,type)}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","/home/ostap/projects/pecode_software-test/src/components/ui-layouts/btnstyles.js",[],["80","81"],"/home/ostap/projects/pecode_software-test/src/context/reducer.js",[],"/home/ostap/projects/pecode_software-test/src/components/ui-layouts/Pagination.js",["82"],"\nimport React from 'react';\n\nexport const Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pageNumbers.map(number => (\n          <li key={number} className='page-item' onClick={() => paginate(number)}>\n            <a className='page-link'>\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\n","/home/ostap/projects/pecode_software-test/src/components/ui-layouts/Posts.js",[],"/home/ostap/projects/pecode_software-test/src/components/ui-layouts/Item.js",["83"],"import React, { useRef } from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport moment from 'moment'\nimport { useUserData } from '../../context/DataContext'\nimport { STOP_VIEW_ITEM } from '../../context/types'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\t\tmaxWidth: 600,\n\t\tdisplay: \"grid\",\n    backgroundColor: \"transparent\",\n    margin: \"10% 30%\",\n    width: \"70%\",\n\t\tboxShadow: \"rgba(0, 0, 0, 0.7) 0px 5px 8px 0px, rgba(0, 0, 0, 0.7) 0px 7px 20px 20px\",\n\t\tcolor: theme.palette.primary.contrastText,\n\t\tcursor: \"pointer\"\n\t},\n\tothers: {\n  color: \"#fff\",\n  width: \"70%\",\n  cursor: \"pointer\",\n  margin: \"20% 35%\",\n  display: \"grid\",\n  maxWidth: \"600px\",\n  boxShadow: \"rgba(0, 0, 0, 0.7) 0px 5px 8px 0px, rgba(0, 0, 0, 0.7) 0px 7px 20px 20px\",\n  backgroundColor: \"#3f51b5\",\n\t},\n  media: {\n    height: 400,\n\t},\n}));\n\nexport const Item = ({item}) => {\n\tconst classes = useStyles()\n\tconst card = useRef()\n\tconst [state, dispatch] = useUserData()\n\n\tconst closeCard = (event) => {\n\t\tif(event.target.className === 'modal-content'){\n\t\t\tdispatch({\n\t\t\t\ttype: STOP_VIEW_ITEM\n\t\t\t})\n\t\t}\n\t}\n\treturn(\n\t\t<div className=\"modal-content\" onClick={(event)=>closeCard(event)}>\n\t\t\t<Card className={item.image ? classes.root : classes.others} ref={card}>\n\t\t\t\t{item.image ? <CardMedia\n\t\t\t\t\timage={item.image}\n\t\t\t\t\ttitle=\"Profile image\"\n\t\t\t\t\tclassName={classes.media}\n\t\t\t\t/> : null}\n\t\t\t\t<CardContent className={classes.content}>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant=\"h5\"\n\t\t\t\t\t>\n\t\t\t\t\t\tname: {item.name}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{item.image ? <Typography variant=\"body1\">\n\t\t\t\t\t\tgender: {item.gender}<br/>\n\t\t\t\t\t\tspecies: {item.species}<br/>\n\t\t\t\t\t\tstatus: {item.status}\n\t\t\t\t\t</Typography> : \n\t\t\t\t\titem.dimension ?  <Typography variant=\"body1\">\n\t\t\t\t\t\tdimension: {item.dimension}<br/>\n\t\t\t\t\t\ttype: {item.type}<br/> \n\t\t\t\t\t</Typography> : \n\t\t\t\t\titem.air_date ? <Typography variant=\"body1\">\n\t\t\t\t\t\tair_date: {item.air_date}<br/>\n\t\t\t\t\t\tepisode: {item.episode}<br/> \n\t\t\t\t\t</Typography> : null}\n\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\tcreatedAt: {moment(item.created).format('LLLL')}\n\t\t\t\t\t</Typography>\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t</div>\n\t\t)\n}\n","/home/ostap/projects/pecode_software-test/src/context/types.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":13,"column":26,"nodeType":"90","messageId":"91","endLine":13,"endColumn":34},{"ruleId":"92","severity":1,"message":"93","line":29,"column":6,"nodeType":"94","endLine":29,"endColumn":8,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"93","line":29,"column":6,"nodeType":"94","endLine":29,"endColumn":8,"suggestions":"96"},{"ruleId":"92","severity":1,"message":"93","line":29,"column":5,"nodeType":"94","endLine":29,"endColumn":7,"suggestions":"97"},{"ruleId":"88","severity":1,"message":"89","line":6,"column":19,"nodeType":"90","messageId":"91","endLine":6,"endColumn":27},{"ruleId":"92","severity":1,"message":"98","line":85,"column":5,"nodeType":"94","endLine":85,"endColumn":11,"suggestions":"99"},{"ruleId":"84","replacedBy":"100"},{"ruleId":"86","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":16,"column":13,"nodeType":"104","endLine":16,"endColumn":38},{"ruleId":"88","severity":1,"message":"105","line":40,"column":9,"nodeType":"90","messageId":"91","endLine":40,"endColumn":14},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["108"],["109"],["110"],"React Hook useEffect has a missing dependency: 'storage'. Either include it or remove the dependency array.",["111"],["106"],["107"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'state' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"112","fix":"114"},{"desc":"112","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [dispatch]",{"range":"118","text":"119"},{"range":"120","text":"119"},{"range":"121","text":"119"},"Update the dependencies array to be: [storage, type]",{"range":"122","text":"123"},[937,939],"[dispatch]",[929,931],[931,933],[2404,2410],"[storage, type]"]